// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  role         String         @default("client")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  appointment  Appointment[]
  notification Notification[]
}

model Service {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  duration    Int
  price       Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  appointment Appointment[]
}

model Appointment {
  id                 Int       @id @default(autoincrement())
  userId             Int
  user               User      @relation(fields: [userId], references: [id])
  serviceId          Int
  service            Service   @relation(fields: [serviceId], references: [id])
  date               DateTime
  status             String    @default("scheduled")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  canceledAt         DateTime?
  canceledById       Int?
  cancellationReason String?
}

model BlockedHours {
  id        Int      @id @default(autoincrement())
  date      DateTime
  reason    String
  createdAt DateTime @default(now())
}

model Notification {
  id      Int      @id @default(autoincrement())
  userId  Int
  user    User     @relation(fields: [userId], references: [id])
  message String
  type    String
  sentAt  DateTime @default(now())
}
